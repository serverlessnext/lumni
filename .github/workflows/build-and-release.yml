name: Build and Release

on:
  push:
    branches:
      - main
  release:
    types:
      - created 

permissions:
  contents: write

env:
  NAME: lumni

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          #- target: aarch64-unknown-linux-gnu
          #  os: ubuntu-latest
          #- target: x86_64-unknown-linux-musl
          #  os: ubuntu-latest
          #- target: aarch64-unknown-linux-musl
          #  os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    env:
      TARGET: ${{ matrix.target }}
      OS: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install and configure dependencies
        run: |
          # dependencies are only needed on ubuntu as that's the only place where
          # we make cross-compilation
          if [[ $OS =~ ^ubuntu.*$ ]]; then
            sudo apt-get install -qq crossbuild-essential-arm64
          fi

          # some additional configuration for cross-compilation on linux
          cat >>~/.cargo/config <<EOF
          [target.aarch64-unknown-linux-gnu]
          linker = "aarch64-linux-gnu-gcc"
          [target.aarch64-unknown-linux-musl]
          linker = "aarch64-linux-gnu-gcc"
          EOF

      - name: Install target
        run: rustup target add $TARGET

      - name: Build project
        run: cargo build -p $NAME --release --target $TARGET

      - name: List target directory
        run: ls target/${{ matrix.target }}/release

      - name: Compress
        run: |
          [ -e ./build ] && rm -rf ./build
          [ -e ./artifacts ] && rm -rf ./artifacts
          mkdir -p ./artifacts ./build/bin
          if [[ $GITHUB_REF_TYPE == "tag" ]]; then
            TAG=$GITHUB_REF_NAME
          else
            TAG=$(echo $GITHUB_SHA |cut -c1-7)
          fi
          mv ./target/$TARGET/release/$NAME ./build/bin/$NAME
          tar -czf ./artifacts/$NAME-$TARGET-$TAG.tar.gz -C ./build .
          shasum -a 256 ./artifacts/$NAME-$TARGET-$TAG.tar.gz > ./artifacts/$NAME-$TARGET-$TAG.tar.gz.sha256

      - name: Archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.NAME }}-artifact
          path: |
            ./artifacts

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.NAME }}-artifact
          path: ./artifacts

      - name: List artifacts
        run: find ./artifacts

      - name: Set release tag
        id: vars
        run: |
          if [[ $GITHUB_REF_TYPE == "tag" ]]; then
            echo "::set-output name=tag::$GITHUB_REF_NAME"
          else
            echo "::set-output name=tag::$(echo $GITHUB_SHA | cut -c1-7)"
          fi

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./artifacts/*.tar.gz
          tag_name: ${{ steps.vars.outputs.tag }}
          name: ${{ steps.vars.outputs.tag }}
          body: Automated release for ${{ github.sha }}
